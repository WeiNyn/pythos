[project]
name = "llm-agent"
version = "0.1.0"
description = "A Python library for LLM-powered development assistance"
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.8"
dependencies = [
    "openai>=1.0.0",
    "anthropic>=0.7.0",
    "python-dotenv>=1.0.0",
    "pydantic>=2.0.0",
    "aiofiles>=23.0.0",
    "asyncio>=3.4.3",
    "setuptools>=75.3.0",
    "pandas>=2.0.3",
    "termcolor>=2.4.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.5",
    "pytest-asyncio>=0.24.0",
    "ruff>=0.3.0",
    "mypy>=1.9.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.poetry]
name = "llm-agent"
version = "0.1.0"
description = "A Python library for LLM-powered development assistance"
authors = ["Your Name <your.email@example.com>"]
license = "MIT"
readme = "README.md"
packages = [{include = "llm_agent"}]

[tool.poetry.dependencies]
python = "^3.8"
openai = "^1.0.0"
anthropic = "^0.7.0"
python-dotenv = "^1.0.0"
pydantic = "^2.0.0"
aiofiles = "^23.0.0"
asyncio = "^3.4.3"

[tool.poetry.group.dev.dependencies]
pytest = "^7.0.0"
black = "^23.0.0"
isort = "^5.0.0"
mypy = "^1.0.0"
pytest-asyncio = "^0.21.0"

[tool.ruff]
target-version = "py38"
line-length = 120
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C",  # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = ["C901"]  # Ignore complexity errors

[tool.ruff.per-file-ignores]
"llm_agent/agent.py" = ["C901"]  # Ignore complexity errors in agent.py

[tool.ruff.isort]
known-first-party = ["llm_agent"]
force-single-line = false
combine-as-imports = true

[tool.mypy]
python_version = "3.8"
warn_return_any = false  # Disable warning about returning Any
warn_unused_configs = true
disallow_untyped_defs = false  # Allow untyped function definitions
check_untyped_defs = true
disallow_incomplete_defs = false  # Allow incomplete type definitions
disallow_untyped_decorators = false  # Allow untyped decorators
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
ignore_errors = true  # Ignore all errors for now

[tool.pytest.ini_options]
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
asyncio_mode = "auto"
